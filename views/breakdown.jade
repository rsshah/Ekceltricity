extends ./skeleton.jade

block append css
	link(href="/css/chartjs.css", rel="stylesheet", type="text/css")

block content
	div.container
		div.row
			div.col-md-10.col-md-offset-1
				h3
					| #{household.name}&nbsp;
					a(href='/household/options/#{household.id}')
						span.glyphicon.glyphicon-cog.glyphicon
				hr
				div.col-md-8.col-md-offset-2
					div.panel.panel-default
						div.panel-body
							form.form-horizontal
								div.form-group
									label.col-xs-5.control-label(for="") Breakdown for
									div.col-xs-7
										select.form-control
											option(selected) January 2016
											option February 2016
							dl.dl-horizontal
								dt Total
								dd $#{totalMonthUsage.totalCost}, #{totalMonthUsage.totalUsage} kW/h
							if totalMonthUsage.mostMemberName !== undefined
								p.bg-primary(style='padding:15px') #{totalMonthUsage.mostMemberName}'s #{totalMonthUsage.mostApplianceName} has the highest usage so far with #{totalMonthUsage.mostApplianceAmount} kW/h ($#{totalMonthUsage.mostApplianceCost})!!
						h4
							| Member Usages
						ul.list-group
							for member in members
								a.list-group-item(href='/breakdown/#{household.id}/#{member.id}' style='padding-left:1em') 
									|	#{member.id === userId ? 'You' : member.name}
									span.glyphicon.glyphicon-chevron-right.pull-right(aria-hidden='true') 
									span.pull-right $#{member.monthUsage} this month&emsp;
				hr
				div.col-md-10.col-md-offset-1
					h3
						| Breakdown
					if totalMonthUsage.totalUsage == 0
						p Toggle your apliances to see a graphical breakdown of your household's electricity usage.
					canvas(id='pie-chart' max-height='600' style="display:#{totalMonthUsage.totalUsage === 0 ? 'none' : 'block'}")
				div.clearfix
				hr
				div.col-md-10.col-md-offset-1
					h3
						| Total Daily Usage
					canvas(id='bar-chart' max-height='450')

block append scripts
	- var colors = ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1"];
	- var highlights = ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5"];
	- var pieData = [];
	if totalMonthUsage.totalUsage != 0
		each member, index in totalMonthUsage.memberBreakdown
			- pieData.push({'value': member.usage, 'label': member.name, 'color': colors[index % 4], 'highlight': highlights[index % 4]});
	- var now = new Date(Date.now());
	- var labels = [];
	- var barData = [0, 0, 0, 0, 0, 0, 0];
	- var householdId = household.id;
	each day, i in weekBreakdown
		- labels.push(((now.getMonth() + 1) % 12) + "/" + (now.getDate() - 6 + i));
		each member, j in day
			- barData[i] += member.usage;
	script(src='/js/Chart.js')
	script(src='/js/chart-config.js')
	script.
		var householdId = !{householdId};
		var pieData = !{JSON.stringify(pieData)};
		var barLabels = !{JSON.stringify(labels)};
		var barChartData = !{JSON.stringify(barData)};
		var barChartData = {
			labels : barLabels,
			datasets : [
				{
					label: "Usage",
					fillColor : "rgba(120,220,220,0.5)",
					strokeColor : "rgba(120,220,220,0.8)",
					highlightFill: "rgba(120,220,220,0.75)",
					highlightStroke: "rgba(120,220,220,1)",
					data : barChartData
				}
			]
		};
		window.onload = function() {
			var ctx = document.getElementById("pie-chart").getContext("2d");
			window.myPie = new Chart(ctx).Pie(pieData);
			$("#pie-chart").after(window.myPie.generateLegend());
			ctx = document.getElementById("bar-chart").getContext("2d");
			window.myBar = new Chart(ctx).Bar(barChartData, null);
			$("#bar-chart").after(window.myBar.generateLegend());
		}
		$(document).ready(function() {
			setInterval(function() {
		  	$.get("/stats/" + householdId, updateDisplay);
		  }, 3000);
		});

		function updateDisplay(result) {
			// update pie chart with new data
			var newPieData = [];
			for (var i = 0; i < result.householdBreakdown.memberBreakdown.length; i++) {
				var member = result.householdBreakdown.memberBreakdown[i];
				for (var j = 0; j < window.myPie.segments.length; j++) {
					if (window.myPie.segments[j].label == member.name) {
						window.myPie.segments[j].value = member.usage;
						break;
					}
				}
			}
			window.myPie.update();

			// update bar chart with new data
			var newBarLabels = [];
			var now = new Date(Date.now());
			var newBarData = [0, 0, 0, 0, 0, 0, 0];
			for (var i = 0; i < result.weekBreakdown.length; i++) {
				newBarLabels.push(((now.getMonth() + 1) % 12) + "/" + (now.getDate() - 6 + i));
				for (var j = 0; j < result.weekBreakdown[i].length; j++) {
					newBarData[i] += result.weekBreakdown[i][j].usage;
				}
			}
			for (var i = 0; i < newBarData.length; i++) {
				window.myBar.datasets[0].bars[i].value = newBarData[i];
				if (window.myBar.scale.xLabels[6] != newBarLabels[6]) {
					window.myBar.scale.xLabels[i] = newBarLabels[i];
				}
			}
			window.myBar.update();
		}


