extends ./skeleton.jade

block append css
	link(href="/css/bootstrap-switch.min.css", rel="stylesheet", type="text/css")
	link(href="/css/chartjs.css", rel="stylesheet", type="text/css")

block content
	div.container
		div.row
			div.col-md-10.col-md-offset-1
				ol.breadcrumb
					li: a(href="/breakdown/#{household.id}")
						| #{household.name}
					li
						| #{userId == member.id ? 'My Appliances' : member.name + "'s Appliances"}
				hr
				nav
					ul.nav.nav-tabs(data-tabs="tabs", role="tab-list")
						li.active(role="presentation"): a(href="#overview", data-toggle="tab") Appliances
						li(role="presentation"): a(href="#logs", data-toggle="tab") Usage Logs
				hr
				div.tab-content
					div#overview.tab-pane.active
						div.col-md-8.col-md-offset-2
							div.panel.panel-default
								div.panel-heading
									| Control your Appliances
								div.panel-body
									div.btn-group.btn-group-justified(role='group' aria-label='...')
										div.btn-group(role='group')
											a.btn.btn-success#addAppliance(href='#' role='button')
												| Add Appliance
										div.btn-group#editAppliances(role='group')
											a.btn.btn-primary(href='#' button type='button')
												| Edit
									div.clearfix
									hr
									form.form-horizontal
										for appliance in appliances
											div.form-group
												label.col-xs-5.control-label(for='')
													| #{appliance.name}
												div.col-xs-7
													input.form-control.tracking(type='checkbox' data-appliance='#{appliance.id}' checked=(appliance.status == 1))
													span.help-block(id='helpBlock')
														| $10.10 this month
								div.panel-footer
									div.center-block(style='text-align:center')
										a.toggle-appliance(href='#' data-state='shown')
											| Hide appliances			
											span.glyphicon.glyphicon-chevron-up
						div.clearfix
						hr
						h3
							| Appliance Usage
						div.col-md-10.col-md-offset-1
							canvas(id='applianceChart' max-height='600')
						div.clearfix
						hr
						h3
							| Daily Usage
						div.col-md-10.col-md-offset-1
							canvas(id='dailyChart' max-height='600')
					div#logs.tab-pane
						div.col-md-10.col-md-offset-1
							div.panel.panel-default.table-responsive
								table.table
									thead
										th Appliance
										th Start time
										th End time
										th
									tbody
										each appliance in appliances
											each usage in appliance.usage
												tr
													td #{appliance.name}
													td #{moment(usage.start).format('MM/DD/YYYY, hh:mm a')}
													td #{usage.end === undefined ? '' : moment(usage.end).format('MM/DD/YYYY, hh:mm a')}
													td 



block append scripts
	- var colors = ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1"];
	- var highlights = ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5"];
	- var pieData = [];
	each appliance, index in appliances
		- pieData.push({'value': Math.random() * 100 * appliance.rate, 'label': appliance.name, 'color': colors[index % 4], 'highlight': highlights[index % 4]});

	script(src='/js/Chart.js')
	script(src='/js/chart-config.js')
	script(src='/js/bootstrap-switch.min.js')
	script(src='/js/jquery.tablesorter.min.js')
	script.
		var pieData = !{JSON.stringify(pieData)};

		var barData = {
		labels: ["1/1", "1/2", "1/3", "1/4", "1/5", "1/6", "1/7"],
		datasets: [
			{
				label: "My First dataset",
				fillColor: "rgba(220,220,220,0.5)",
				strokeColor: "rgba(220,220,220,0.8)",
				highlightFill: "rgba(220,220,220,0.75)",
				highlightStroke: "rgba(220,220,220,1)",
				data: [0, 20, 30, 40, 45, 35, 42]
			},
			{
				label: "My Second dataset",
				fillColor: "rgba(151,187,205,0.5)",
				strokeColor: "rgba(151,187,205,0.8)",
				highlightFill: "rgba(151,187,205,0.75)",
				highlightStroke: "rgba(151,187,205,1)",
				data: [0, 0, 5, 10, 15, 9, 7]
			}
		]};
		$(document).ready(function() {
		  $(".tracking").bootstrapSwitch();
		  $(".tracking").on('switchChange.bootstrapSwitch', function(evt, state) {
		  	$.get('/tracking/' + $(this).data('appliance'));
		  });

		  $(".table").tablesorter({ sortList: [[0, 0], [1, 0]] });
		  
		  $(".toggle-appliance").click(function(evt) {
				evt.preventDefault();
				var text = '';
				var state = $(this).data("state");
				if (state === "hidden") {
				  text = 'Hide appliances <span class="glyphicon glyphicon-chevron-up"></span>';
				  $(this).data("state", "shown");
				} else {
				  text = 'Show appliances <span class="glyphicon glyphicon-chevron-down"></span>';
				  $(this).data("state", "hidden");
				}
				$(this).html(text);
				$(this).parents(".panel").find(".panel-body").slideToggle();
		  });

		  $("#addAppliance").on('click', function(evt) {
		  	evt.preventDefault();
		  	$(".form-group:first").before(
		  		"<div class='form-group'>" +
		  			"<label class='col-xs-5 control-label' for=''>Appliance Name</label>" + 
		  			"<div class='col-xs-7'>" + 
		  				"<input type='checkbox' data-appliance='3' class='form-control tracking'>" +
		  				"<span class='help-block' id='help-block'>$0 this month</span>" +
		  			"</div>" +
		  		"</div>"
		  	)
		  	$(".tracking").bootstrapSwitch();
		  });

		  $("#editAppliances").on('click', function(evt) {
		  	evt.preventDefault();
		  });

		  // Get context with jQuery - using jQuery's .get() method.
		  var ctx = $("#applianceChart").get(0).getContext("2d");
		  // This will get the first returned node in the jQuery collection.
		  var myNewChart = new Chart(ctx).Pie(pieData, {
			//String - A legend template
			legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

		  });
		  $("#applianceChart").after(myNewChart.generateLegend());

		  // Get context with jQuery - using jQuery's .get() method.
		  var ctx = $("#dailyChart").get(0).getContext("2d");
		  // This will get the first returned node in the jQuery collection.
		  var myNewChart = new Chart(ctx).Bar(barData, {
			//String - A legend template
			legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

		  });

		});
