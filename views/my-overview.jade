extends ./skeleton.jade

block append css
	link(href="/css/bootstrap-switch.min.css", rel="stylesheet", type="text/css")
	link(href="/css/chartjs.css", rel="stylesheet", type="text/css")

block content
	div.container
		div.row
			div.col-md-10.col-md-offset-1
				ol.breadcrumb
					li: a(href="/breakdown/#{household.id}")
						| #{household.name}
					li
						| #{readOnly ? member.name + "'s Appliances" : 'My Appliances'}
				hr
				nav
					ul.nav.nav-tabs(data-tabs="tabs", role="tab-list")
						li.active(role="presentation"): a(href="#overview", data-toggle="tab") Appliances
						li(role="presentation"): a(href="#breakdown", data-toggle="tab") Breakdown
						li(role="presentation"): a(href="#logs", data-toggle="tab") Usage Logs
				hr
				div.tab-content
					div#overview.tab-pane.active
						div.col-md-8.col-md-offset-2
							div.panel.panel-default
								div.panel-heading
									| #{ readOnly ? "Viewing " + member.name + "'s appliances": 'Control your appliances'}
								div.panel-body
									unless readOnly
										button.btn.btn-success.btn-block#addAppliance(href='#' role='button' style="display:#{appliances.length === 0 ? 'none' : 'block'}")
											| Add Appliance
										div#addApplianceDiv(hidden=(appliances.length !== 0))
											hr
											form.form-horizontal(method="POST" action='/appliance/add/#{household.id}/')
												div.form-group
													label.col-sm-4.control-label Appliance Name
													div.col-sm-7
														input.form-control#addApplianceNameInput(type="text", name="name", required)
												div.form-group
													label.col-sm-4.control-label Usage Rate
													div.col-sm-7
														div.input-group
															input.form-control#addApplianceUsageRateInput(type="text", name="rate", value="0.1", required)
															span.input-group-addon kWh
												div.col-sm-5.col-sm-offset-1
													a.btn.btn-default.pull-right#cancelAddAppliance
														| Cancel
												div.col-sm-5
													button.btn.btn-success
														| Add
										div.clearfix
										hr
									if appliances.length !== 0
										form.form-horizontal
											for appliance in appliances
												div.form-group
													label.col-xs-5.control-label(for='')
														if readOnly
															| #{appliance.name}
														else
															a(href='/appliance/edit/#{household.id}/#{appliance.id}')
																| #{appliance.name}&nbsp;
																span.glyphicon.glyphicon-pencil
													div.col-xs-7
														input.form-control.tracking(type='checkbox' data-appliance='#{appliance.id}' checked=(appliance.status == 1) readonly=(readOnly))
														span.help-block(id='helpBlock')
															| $10.10 this month
									else
										if readOnly
											p #{member.name} has not added any appliances, tell them to do so!

					div#breakdown.tab-pane
						div.col-md-10.col-md-offset-1
							h3
								| Appliance Usage
							if appliances.length === 0
								p Add some appliances to see a graphical breakdown of your usage.
							canvas(id='applianceChart' max-height='600' style="display:#{appliances.length === 0 ? 'none' : 'block'}")
						div.clearfix
						hr
						div.col-md-10.col-md-offset-1
							h3
								| Daily Usage
							canvas(id='dailyChart' max-height='600')
					div#logs.tab-pane
						div.col-md-10.col-md-offset-1
							each appliance in appliances
								div.panel.panel-default.table-responsive
									div.panel-heading
										| #{appliance.name}
										a.pull-right.toggle-logs(data-state="hidden")
											| View&nbsp;
											span.glyphicon.glyphicon-chevron-down
									table.table(style="display:none")
										thead
											th
												| Start time
											th
												| Endtime
											unless readOnly
												th
										tbody
											each usage, index in appliance.usage												
												tr
													td
														if readOnly
															| #{moment(usage.start).format('MM/DD/YYYY hh:mm:ss')}
														else 
															input.form-control.usage-times(type="datetime-local" value="#{moment(usage.start).format('YYYY-MM-DDThh:mm:ss')}")
													td
														if readOnly
															| #{usage.end === undefined ? '' : moment(usage.end).format('MM/DD/YYYY hh:mm:ss')}
														else 
															input.form-control.usage-times(type="datetime-local" value="#{usage.end === undefined ? '' : moment(usage.end).format('YYYY-MM-DDThh:mm:ss')}")
													unless readOnly
														td
															button.btn.btn-primary.disabled.submit-usage(data-appliance="#{appliance.id}" data-usage="#{usage.id}" data-index="#{index}")
																| Save



block append scripts
	- var colors = ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1"];
	- var highlights = ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5"];
	- var pieData = [];
	each appliance, index in appliances
		- pieData.push({'value': Math.random() * 100 * appliance.rate, 'label': appliance.name, 'color': colors[index % 4], 'highlight': highlights[index % 4]});

	script(src='/js/Chart.js')
	script(src='/js/chart-config.js')
	script(src='/js/bootstrap-switch.min.js')
	script.
		var pieData = !{JSON.stringify(pieData)};
		var barData = {
		labels: ["1/1", "1/2", "1/3", "1/4", "1/5", "1/6", "1/7"],
		datasets: [
			{
				label: "My First dataset",
				fillColor: "rgba(220,220,220,0.5)",
				strokeColor: "rgba(220,220,220,0.8)",
				highlightFill: "rgba(220,220,220,0.75)",
				highlightStroke: "rgba(220,220,220,1)",
				data: [0, 20, 30, 40, 45, 35, 42]
			},
			{
				label: "My Second dataset",
				fillColor: "rgba(151,187,205,0.5)",
				strokeColor: "rgba(151,187,205,0.8)",
				highlightFill: "rgba(151,187,205,0.75)",
				highlightStroke: "rgba(151,187,205,1)",
				data: [0, 0, 5, 10, 15, 9, 7]
			}
		]};
		var chartsInitialized = false;
		$(document).ready(function() {
		  $(".tracking").bootstrapSwitch();
			$(".tracking").on('switchChange.bootstrapSwitch', function(evt, state) {
				$.post('/appliance/toggle/' + $(this).data('appliance'));
			});
		  $(".usage-times").on('change', function(evt) {
		  	$(this).parents("tr").find(".submit-usage").removeClass('disabled');
		  });

		  $(".submit-usage").on('click', saveLog);		  
		  $(".toggle-logs").on('click', toggleLogs); 

		  $("#addAppliance").on('click', function(evt) {
		  	evt.preventDefault();
		  	$("#addApplianceDiv").toggle();
		  	$(".tracking").bootstrapSwitch();
		  });

		  $("#cancelAddAppliance").on('click', function(evt) {
		  	evt.preventDefault();
		  	$("#addApplianceNameInput").val("");
		  	$("#addApplianceDiv").toggle();
		  });		  

		  $('a[href="#breakdown"]').on('shown.bs.tab', initCharts);
		});

		function saveLog(evt) {
			console.log($(this).closest("tr"));
		}

		function toggleLogs(evt) {
			evt.preventDefault();
			var text = '';
			var state = $(this).data("state");
			if (state === "hidden") {
				text = 'Hide <span class="glyphicon glyphicon-chevron-up"></span>';
				$(this).data("state", "shown");
			} else {
				text = 'Show <span class="glyphicon glyphicon-chevron-down"></span>';
				$(this).data("state", "hidden");
			}
			$(this).html(text);
			$(this).parents(".panel").find(".table").slideToggle();
		}

		function initCharts(evt) {
			if (!chartsInitialized) {
				var ctx = $("#applianceChart").get(0).getContext("2d");		  		
					var myNewChart = new Chart(ctx).Pie(pieData);
				$("#applianceChart").after(myNewChart.generateLegend());

				var ctx = $("#dailyChart").get(0).getContext("2d");
				var myNewChart = new Chart(ctx).Bar(barData);
				chartsInitialized = true;
			}
		}
