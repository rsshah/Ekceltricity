extends ./skeleton.jade

block append css
	link(href="/css/bootstrap-switch.min.css", rel="stylesheet", type="text/css")
	link(href="/css/chartjs.css", rel="stylesheet", type="text/css")

block content
	div.container
		div.row
			div.col-md-10.col-md-offset-1
				h4(style='display:inline')
					a(href='/breakdown')
						| College Household
				h4(style='display:inline')
					| &nbsp; Sabit's Appliances
				hr
				div.col-md-8.col-md-offset-2
					div.panel.panel-default
						div.panel-heading
							| Control your Appliances
						div.panel-body
							div.btn-group.btn-group-justified(role='group' aria-label='...')
								div.btn-group(role='group')
									a.btn.btn-success(href='/add-appliance' role='button')
										| Add Appliance
								div.btn-group(role='group')
									a.btn.btn-primary(href='/edit-appliance' button type='button')
										| Edit
							div.clearfix
							hr
							form.form-horizontal
								for appliance in appliances
									div.form-group
										label.col-xs-5.control-label(for='')
											| #{appliance.name}
										div.col-xs-7
											if appliance.status == 1
												input.form-control.tracking(type='checkbox' id='' checked)
											else
												input.form-control.tracking(type='checkbox' id='')
											span.help-block(id='helpBlock')
												| $#{appliance.cost} this month
						div.panel-footer
							div.center-block(style='text-align:center')
								a.toggle-appliance(href='#' data-state='shown')
									| Hide appliances			
									span.glyphicon.glyphicon-chevron-up
				div.clearfix
				hr
				h3
					| Appliance Usage
				div.col-md-10.col-md-offset-1
					canvas(id='applianceChart' max-height='600')
				div.clearfix
				hr
				h3
					| Daily Usage
				div.col-md-10.col-md-offset-1
					canvas(id='dailyChart' max-height='600')

block append scripts
	script(src='/js/Chart.js')
	script(src='/js/chart-config.js')
	script(src='/js/bootstrap-switch.min.js')
	script.
		var pieData = [
		{
			value: 15,
			color:"#F7464A",
			highlight: "#FF5A5E",
			label: "Laptop Charger"
		},
		{
			value: 5,
			color: "#46BFBD",
			highlight: "#5AD3D1",
			label: "Lamp"
		},
		{
			value: 5,
			color: "#FDB45C",
			highlight: "#FFC870",
			label: "Phone Charger"
		},
		{
			value: 40,
			color: "#949FB1",
			highlight: "#A8B3C5",
			label: "A/C"
		},
		{
			value: 15,
			color: "#4D5360",
			highlight: "#616774",
			label: "Fan"
		}

		];
		var barData = {
		labels: ["1/1", "1/2", "1/3", "1/4", "1/5", "1/6", "1/7"],
		datasets: [
			{
				label: "My First dataset",
				fillColor: "rgba(220,220,220,0.5)",
				strokeColor: "rgba(220,220,220,0.8)",
				highlightFill: "rgba(220,220,220,0.75)",
				highlightStroke: "rgba(220,220,220,1)",
				data: [0, 20, 30, 40, 45, 35, 42]
			},
			{
				label: "My Second dataset",
				fillColor: "rgba(151,187,205,0.5)",
				strokeColor: "rgba(151,187,205,0.8)",
				highlightFill: "rgba(151,187,205,0.75)",
				highlightStroke: "rgba(151,187,205,1)",
				data: [0, 0, 5, 10, 15, 9, 7]
			}
		]};
		$(document).ready(function() {
		  $(".tracking").bootstrapSwitch();
		  
		  $(".toggle-appliance").click(function(evt) {
			evt.preventDefault();
			var text = '';
			var state = $(this).data("state");
			if (state === "hidden") {
			  text = 'Hide appliances <span class="glyphicon glyphicon-chevron-up"></span>';
			  $(this).data("state", "shown");
			} else {
			  text = 'Show appliances <span class="glyphicon glyphicon-chevron-down"></span>';
			  $(this).data("state", "hidden");
			}
			$(this).html(text);
			$(this).parents(".panel").find(".panel-body").slideToggle();
		  });

		  // Get context with jQuery - using jQuery's .get() method.
		  var ctx = $("#applianceChart").get(0).getContext("2d");
		  // This will get the first returned node in the jQuery collection.
		  var myNewChart = new Chart(ctx).Pie(pieData, {
			//String - A legend template
			legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

		  });
		  $("#applianceChart").after(myNewChart.generateLegend());

		  // Get context with jQuery - using jQuery's .get() method.
		  var ctx = $("#dailyChart").get(0).getContext("2d");
		  // This will get the first returned node in the jQuery collection.
		  var myNewChart = new Chart(ctx).Bar(barData, {
			//String - A legend template
			legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

		  });
		  $("#dailyChart").after(myNewChart.generateLegend());

		});
